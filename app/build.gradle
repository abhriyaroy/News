apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: '../versions.gradle'

android {
  compileSdkVersion COMPILE_SDK_VERSION
  buildToolsVersion BUILD_TOOLS_VERSION
  defaultConfig {
    applicationId "com.zebrostudio.news"
    minSdkVersion MINIMUM_SDK_VERSION
    targetSdkVersion TARGET_SDK_VERSION
    versionCode APP_VERSION
    versionName APP_VERSION_NAME
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }
}

dependencies {
  // Core
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$KOTLIN_VERSION"
  implementation "androidx.appcompat:appcompat:$SUPPORT_LIBRARY_VERSION"
  implementation "com.google.android.material:material:$MATERIAL_DESIGN_VERSION"
  implementation "androidx.core:core-ktx:$CORE_KTX_VERSION"
  implementation "androidx.constraintlayout:constraintlayout:$CONSTRAINT_LAYOUT_VERSION"
  implementation "androidx.recyclerview:recyclerview:$RECYCLER_VIEW_VERSION"
  implementation "androidx.cardview:cardview:$CARD_VIEW_VERSION"
  // Dagger
  implementation "com.google.dagger:dagger:$DAGGER_VERSION"
  implementation "com.google.dagger:dagger-android-support:$DAGGER_VERSION"
  kapt "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
  kapt "com.google.dagger:dagger-android-processor:$DAGGER_VERSION"
  // Rx java
  implementation "io.reactivex.rxjava2:rxjava:$RX_JAVA_VERSION"
  // Rx android
  implementation "io.reactivex.rxjava2:rxandroid:$RX_ANDROID_VERSION"
  // Autodispose
  implementation "com.uber.autodispose:autodispose:$AUTODISPOSE_VERSION"
  implementation "com.uber.autodispose:autodispose-android:$AUTODISPOSE_VERSION"
  implementation "com.uber.autodispose:autodispose-android-archcomponents:$AUTODISPOSE_VERSION"
  implementation "com.uber.autodispose:autodispose-android-archcomponents-test:$AUTODISPOSE_VERSION"
  // Retrofit
  implementation "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
  implementation "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
  implementation "com.squareup.retrofit2:adapter-rxjava2:$RETROFIT_VERSION"
  // Room
  implementation "android.arch.persistence.room:runtime:$ROOM_VERSION"
  implementation "android.arch.persistence.room:rxjava2:$ROOM_VERSION"
  kapt "android.arch.persistence.room:compiler:$ROOM_VERSION"
  // Glide
  implementation "com.github.bumptech.glide:glide:$GLIDE_VERSION"
  annotationProcessor "com.github.bumptech.glide:compiler:$GLIDE_VERSION"
  // Material progress bar
  implementation "me.zhanghai.android.materialprogressbar:library:$MATERIAL_PROGRESS_VERSION"
  // Test runners
  testImplementation "junit:junit:$JUNIT_VERSION"
  testImplementation "org.assertj:assertj-core:$ASSERTJ_VERSION"
  testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$MOCKITO_VERSION"
}